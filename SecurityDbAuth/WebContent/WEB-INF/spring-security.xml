<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

	<!-- Activity 3. Implementations of Authentication Providers -->
	<!-- Expression-Based Access Control https://docs.spring.io/spring-security/site/docs/current/reference/html/el-access.html -->
	<http use-expressions="true">
		<intercept-url pattern="/login*" access="isAnonymous()" />
		
		<intercept-url pattern="/admin" access="isAuthenticated() and hasAnyRole('ADMIN_ROLE', 'ROLE_ADMIN')" />
		<intercept-url pattern="/welcome" access="isAuthenticated() and hasAnyRole('USER_ROLE', 'ROLE_USER')" />
		
		<intercept-url pattern="/**" access="isAuthenticated()" /><!-- catch-all -->
		
		<form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/login?error=true" />
		<logout logout-success-url="/login?logout=true" logout-url="/j_spring_security_logout" />
	</http>

	<authentication-manager>
		<!-- in-memory -->
		<authentication-provider>
			<user-service>
				<user name="admin" password="admin" authorities="ROLE_ADMIN, ROLE_USER" />
			</user-service>
		</authentication-provider>
		
		<!-- database -->
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="select username, password, enabled from users where username=?"
				authorities-by-username-query="select username, role from roles join users on roles.USER_ID=users.USER_ID where username=?" />
		</authentication-provider>		
	</authentication-manager>

</beans:beans>